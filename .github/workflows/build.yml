
name: Build Android Core

on:
  workflow_dispatch:
    inputs:
      version:
        description: &quot;Version name (e.g., 1.9.0-beta.11)&quot;
        required: true
        type: string
  push:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  calculate_version:
    name: Calculate version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.outputs.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Check input version
        if: github.event_name == &#39;workflow_dispatch&#39;
        run: |-
          echo &quot;version=${{ inputs.version }}&quot;
          echo &quot;version=${{ inputs.version }}&quot; &gt;&gt; &quot;$GITHUB_ENV&quot;
      - name: Calculate version
        if: github.event_name != &#39;workflow_dispatch&#39;
        run: |-
          go run -v ./cmd/internal/read_tag --ci
      - name: Set outputs
        id: outputs
        run: |-
          echo &quot;version=$version&quot; &gt;&gt; &quot;$GITHUB_OUTPUT&quot;

  build_android_binary:
    name: Build Android Binary
    runs-on: ubuntu-latest
    needs:
      - calculate_version
    strategy:
      matrix:
        include:
          - { os: android, arch: arm64, ndk: &quot;aarch64-linux-android21&quot; }
          - { os: android, arch: arm, ndk: &quot;armv7a-linux-androideabi21&quot; }
          - { os: android, arch: amd64, ndk: &quot;x86_64-linux-android21&quot; }
          - { os: android, arch: &quot;386&quot;, ndk: &quot;i686-linux-android21&quot; }
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r28
          # local-cache: true  <-- 已禁用缓存以避免503错误
      - name: Set build tags
        run: |
          set -xeuo pipefail
          TAGS=&#39;with_gvisor,with_quic,with_dhcp,with_wireguard,with_utls,with_reality_server,with_acme,with_clash_api,with_ech&#39;
          echo &quot;BUILD_TAGS=${TAGS}&quot; &gt;&gt; &quot;${GITHUB_ENV}&quot;
      - name: Build Android Binary
        run: |
          set -xeuo pipefail
          go install -v ./cmd/internal/build
          export CC=&#39;${{ matrix.ndk }}-clang&#39;
          export CXX=&quot;${CC}++&quot;
          mkdir -p dist
          GOOS=$BUILD_GOOS GOARCH=$BUILD_GOARCH build go build -v -trimpath -o dist/sing-box -tags &quot;${BUILD_TAGS}&quot; \
          -ldflags &#39;-s -buildid= -X github.com/sagernet/sing-box/constant.Version=${{ needs.calculate_version.outputs.version }}&#39; \
          ./cmd/sing-box
        env:
          CGO_ENABLED: &quot;1&quot;
          BUILD_GOOS: ${{ matrix.os }}
          BUILD_GOARCH: ${{ matrix.arch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set name
        run: |-
          DIR_NAME=&quot;sing-box-${{ needs.calculate_version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}&quot;
          echo &quot;DIR_NAME=${DIR_NAME}&quot; &gt;&gt; &quot;${GITHUB_ENV}&quot;
      - name: Archive
        run: |
          set -xeuo pipefail
          cd dist
          mkdir -p &quot;${DIR_NAME}&quot;
          cp ../LICENSE &quot;${DIR_NAME}&quot;
          cp sing-box &quot;${DIR_NAME}&quot;
          tar -czvf &quot;${DIR_NAME}.tar.gz&quot; &quot;${DIR_NAME}&quot;
          rm -r &quot;${DIR_NAME}&quot;
      - name: Cleanup
        run: rm dist/sing-box
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}_${{ matrix.arch }}
          path: &quot;dist&quot;
