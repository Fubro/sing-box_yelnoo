# ## file: .github/workflows/build-android-core.yml

name: Build Android Core Binary

on:
  workflow_dispatch:
    inputs:
      # 这个输入框用于 ldflags，决定二进制文件内部显示的版本号
      version_name:
        description: 'Binary version name (e.g., 1.9.1)'
        required: true
        type: string
      # 新增：这个输入框用于指定要构建哪个标签的源代码
      git_ref:
        description: 'Git branch or tag to build (e.g., v1.9.1)'
        required: true
        # 默认使用 main 分支
        default: 'main' 
        type: string

jobs:
  build_android_binary:
    name: Build Android Binary
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - { arch: arm64,  ndk: "aarch64-linux-android21" }
          - { arch: arm,    ndk: "armv7a-linux-androideabi21" }
          - { arch: amd64,  ndk: "x86_64-linux-android21" }
          - { arch: "386",  ndk: "i686-linux-android21" }

    steps:
      # 第 1 步：拉取指定标签或分支的源代码
      - name: Checkout repository at specified ref
        uses: actions/checkout@v4
        with:
          # 使用手动输入框中的 git_ref 值
          ref: ${{ github.event.inputs.git_ref }}
          fetch-depth: 0

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '^1.24'

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r28

      - name: Set build tags
        run: |
          TAGS='with_gvisor,with_quic,with_dhcp,with_wireguard,with_utls,with_reality_server,with_acme,with_clash_api,with_ech'
          echo "BUILD_TAGS=${TAGS}" >> "${GITHUB_ENV}"

      - name: Build Android Binary
        run: |
          set -e
          go install -v ./cmd/internal/build
          export CC='${{ matrix.ndk }}-clang'
          export CXX="${CC}++"
          mkdir -p dist
          GOOS=android GOARCH=${{ matrix.arch }} build go build -v -trimpath -o dist/sing-box -tags "${BUILD_TAGS}" \
          -ldflags '-s -w -buildid= -X github.com/sagernet/sing-box/constant.Version=${{ github.event.inputs.version_name }}' \
          ./cmd/sing-box
        env:
          CGO_ENABLED: "1"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare archive file
        run: |
          set -e
          DIR_NAME="sing-box-${{ github.event.inputs.version_name }}-android-${{ matrix.arch }}"
          cd dist
          mkdir -p "${DIR_NAME}"
          cp ../LICENSE "${DIR_NAME}"
          mv sing-box "${DIR_NAME}"
          tar -czvf "${DIR_NAME}.tar.gz" "${DIR_NAME}"
          rm -r "${DIR_NAME}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-android_${{ matrix.arch }}
          path: dist/*.tar.gz
